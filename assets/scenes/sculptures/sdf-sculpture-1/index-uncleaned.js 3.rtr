const startPos = -50;

scene({
    rendererSettings: {
        realtimeHitDepth: 2,
        hitDepth: 4,
        tMax: 5000,
        maxSphereTracingSteps: 255,
        resolution: 0.5,
        renderMode: 'sdf'
    },
    sdfExportSettings: {
        resolution: 50,
        minCoords: {x: -10, y: -0.1, z: -10},
        maxCoords: {x: 0, y: 8, z: 0}
    },
    camera: {
        lookFrom: {x: 1.635, y: 4.827, z: -15.467},
        lookAt: {x: -1.417, y: 3.852, z: -12.293},
        vfov: 45,
        aperture: 1e-8,
        velocity: 1
    },
    background: '#000',
    geometries: [
        sdf(
          opUnionRound({radius: 0.5 + random(0.4), colorBlendAmount: 0.3},
              // 3x3x3 => more full sphere!
              // ...(range3d(3, 3, 3)
              ...(range3d(2, 3, 2)
              // |> subRange(#, range3d(4, 6, 0, 1, 4, 5))
              |> #.map(([x, y, z]) => {
                  return sdfTorus({
                      // material: 'lambert-red',
                      //   material: 'floor-white',
                      material: 'clearcoat-red',
                      // dimensions: {x: 5, y: 5, z: 5},
                      innerRadius: 0.15 + random(0.2),
                      outerRadius: 1,
                      displacement: 'torus-displacement',
                      position: {
                          x: -9 + x*2.5,
                          y: 1.3 + y*1.5,
                          z: -9 + z*2.5
                      },
                      rotation: {
                          z: random(Math.PI),
                          y: random(Math.PI),
                          z: random(Math.PI)
                      }
                  })
              })),
          )
          |> opIntersect(#,
              sdfSphere({
                  // material: `lambert-red`,
                  material: 'clearcoat-test',
                  radius: 3,
                  position: {x: -6, y: 3.5, z: -6},
              })
          )
          // |> opUnion(#,
          //   sdfBox({
          //       material: 'clearcoat-test',
          //       // material: `lambert-red`,
          //       dimensions: {x: 2.7, y: 0.5, z: 2.7},
          //       position: {x: -7, y: 0.5, z: -6.6},
          //   }),
          // )
        ),
        sdf(
          sdfBox({
              material: 'clearcoat-test',
              // material: `lambert-red`,
              dimensions: {x: 2.7, y: 0.5, z: 2.7},
              position: {x: -7, y: 0.5, z: -6.6},
          }),
        ),

        // sdf(
        //   sdfXzPlane({
        //       // material: 'clearcoat-test',
        //       material: `lambert-white`,
        //       displacement: 'noise-displacement',
        //       upDirection: {x: 0, y: 1, z: 0},
        //       // position: {x: -7, y: 0.5, z: -6.6},
        //     //   texture: {
        //     //       name: 'check',
        //     //       uvScale: 0.05
        //     //   },
        //   })
        // ),


        ///////
        // sdf(
        //   sdfBox({
        //       material: 'ceil-light',
        //       // material: `lambert-red`,
        //       dimensions: {x: 2.7, y: 0.1, z: 2.7},
        //       position: {x: -7, y: 15, z: -6.6},
        //   }),
        // ),


        // sphere({
        //     // material: `lambert-red`,
        //     material: 'clearcoat-test',
        //     radius: 3,
        //     position: {x: -6, y: 15.5, z: -6},
        //     smoothShading: false,
        // }),
        // objModel({
        //     url: 'assets/models/deer.obj',
        //     material: 'floor-white',
        //     smoothShading: false,
        //     scale: 0.02,
        //     position: {
        //         x: 0,
        //         y: 0,
        //         z: 10
        //     },
        //     rotation: {
        //         y: degToRad(180),
        //     }
        // }),
        // sdf(
        //     sdfCylinder({
        //         radius: 1,
        //         height: 4,
        //         position: {x: -6, y: 5, z: -6},
        //         material: `floor-white`,
        //         // rotation: {
        //         //     x: degToRad(45)
        //         // },
        //         displacement: 'torus-displacement',
        //         // material: 'clearcoat-test',
        //         // texture: {
        //         //     name: 'check',
        //         //     uvScale: 0.1
        //         // },
        //     })
        //     |> opSubtract(#,
        //         // sdfSphere({
        //         //     domain: {
        //         //         domainOp: 'repeat',
        //         //         axis: 'xyz',
        //         //         size: 0.45
        //         //     },
        //         //     // material: 'clearcoat-test',
        //         //     material: `lambert-red`,
        //         //     dimensions: {x: 0.15, y: 0.15, z: 0.15},
        //         //     position: {x: -6 + random(3), y: 13, z: -3 - random(3)},
        //
        //         //     // material: `lambert-red`,
        //         //     radius: 0.15 + random(0.5),
        //         // }),
        //         sdfBox({
        //             domain: {
        //                 domainOp: 'repeat',
        //                 axis: 'xyz',
        //                 size: 0.5
        //             },
        //             rotation: {
        //                 z: random(Math.PI),
        //                 y: random(Math.PI),
        //                 z: random(Math.PI)
        //             },
        //             // material: 'clearcoat-test',
        //             material: `lambert-red`,
        //             dimensions: {x: 0.18, y: 0.18, z: 0.18},
        //             position: {x: -5 - random(3), y: 10.5, z: -5},
        //         }),
        //         // sdfBox({
        //         //     domain: {
        //         //         domainOp: 'repeat',
        //         //         axis: 'xyz',
        //         //         size: 0.4
        //         //     },
        //         //     // material: 'clearcoat-test',
        //         //     material: `lambert-red`,
        //         //     dimensions: {x: 0.15, y: 0.15, z: 0.15},
        //         //     position: {x: -6, y: 13, z: -6},
        //         // }),
        //     )
        // ),
        // sdf(
        //     sdfSphere({
        //         // material: `lambert-red`,
        //         material: 'clearcoat-test',
        //         radius: 5,
        //         position: {x: startPos + 20, y: 10, z: 0},
        //     })
        // ),
        // sdf(
        //     sdfBox({
        //         // material: 'clearcoat-test',
        //         material: `lambert-red`,
        //         dimensions: {x: 5, y: 5, z: 5},
        //         position: {x: startPos + 25, y: 10, z: 0},
        //     }),
        // ),
        // sdf(
        //     sdfTorus({
        //         // material: 'lambert-red',
        //         material: 'clearcoat-test',
        //         // dimensions: {x: 5, y: 5, z: 5},
        //         innerRadius: 2.5,
        //         outerRadius: 5,
        //         position: {x: startPos + 33, y: 10, z: 0},
        //         // texture: {
        //         //     name: 'check',
        //         //     uvScale: 20
        //         // }
        //     }),
        // ),

        plane({
          material: 'floor-white',
          texture: {
              name: 'check',
              uvScale: 50
          },
          scale: 1000,
          position: {
              x: 0,
              y: 0,
              z: 0
          },
        }),
        plane({
            material: 'ceil-light',
            scale: 15,
            position: {
                x: 20,
                y: 30.0,
                z: 0
            },
        }),
        plane({
            material: 'ceil-light',
            scale: 15,
            position: {
                x: -20,
                y: 30.0,
                z: 0
            },
        })
        ],
        displacements: [
        {
          name: 'torus-displacement',
          src: `
              float offset = ${glslFloat(random(100))};
              // float d = sin(1.*(p.x+offset)) * sin(1.*(p.y+offset)) * sin(1.*(p.z+offset));
              float d = snoise((p+offset)*(0.5 + ${glslFloat(random(0.3))}));
              dDist = d*-0.2;
          `
        },
        {
            name: 'noise-displacement',
            src: `
                float offset = ${glslFloat(random(100))};

                // rotation matrix
                const mat3 m = mat3( 0.00,  0.80,  0.60, -0.80,  0.36, -0.48, -0.60, -0.48,  0.64 );

                // fbm
                float t = 0.0;
            	float s = 1.;

                float d = 0.;
                for( int i=0; i<5; i++) {
                	d = smax(d, -noiseSdf((p+offset)*0.3)*s, 0.2*s);
                    p = 2.01*m*p; // next octave
                    s = 0.50*s;
                }

                dDist = d*0.4;
            `
        }
    ],
    textures: [
        texture({
          name: 'aluminum',
          url: 'assets/images/displacementMapTest.png'
        }),
        texture({
          name: 'check',
          src: `
              float s = sin(50.*uv.x)*sin(50.*uv.y);
              if(s < 0.) {
                  tColor = vec4(${normedColorStr('#aaaaaa')}, 1.0);
              } else {
                  tColor = vec4(${normedColorStr('#aa0000')}, 1.0);
              }
          `
        })
    ],
    materials: [
        lambertMaterial({
          name: `floor-white`,
          color: '#909090',
          albedo: [0.8, 0.8, 0.8]
        }),
        lambertMaterial({
          name: `lambert-red`,
          color: '#ff0000',
          albedo: [0.8, 0.8, 0.8]
        }),
        clearcoatMaterial({
            name: 'clearcoat-red',
            color: '#ff0000',
            // color: '#101010',
            refIdx: 1.8,
        }),
        emissiveMaterial({
          name: `ceil-light`,
          color: '#ffffff',
          intensity: 10
        }),
        clearcoatMaterial({
          name: 'clearcoat-test',
          // color: '#ffffff',
          color: '#101010',
          refIdx: 1.8,
        }),
    ]
});
